[
  {
    "type": "console.flag",
    "properties": {
      "handler": {
        "$codeRef": "features.setOCSFlags"
      }
    }
  },
  {
    "type": "console.flag",
    "properties": {
      "handler": {
        "$codeRef": "features.setODFFlag"
      }
    }
  },
  {
    "type": "console.flag",
    "properties": {
      "handler": {
        "$codeRef": "features.detectOCSSupportedFeatures"
      }
    }
  },
  {
    "type": "console.flag",
    "properties": {
      "handler": {
        "$codeRef": "features.detectRGW"
      }
    }
  },
  {
    "type": "console.flag",
    "properties": {
      "handler": {
        "$codeRef": "features.detectManagedODF"
      }
    }
  },
  {
    "type": "console.flag",
    "properties": {
      "handler": {
        "$codeRef": "features.detectComponents"
      }
    }
  },
  {
    "type": "console.flag",
    "properties": {
      "handler": {
        "$codeRef": "features.detectSSAR"
      }
    }
  },
  {
    "type": "console.navigation/resource-cluster",
    "properties": {
      "id": "objectbuckets",
      "section": "storage",
      "name": "Object Buckets",
      "insertAfter": "volumesnapshotcontents",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucket",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["MCG"]
    }
  },
  {
    "type": "console.navigation/resource-cluster",
    "properties": {
      "id": "objectbuckets",
      "section": "storage",
      "name": "Object Buckets",
      "insertAfter": "volumesnapshotcontents",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucket",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["RGW"],
      "disallowed": ["MCG"]
    }
  },
  {
    "type": "console.navigation/resource-ns",
    "properties": {
      "id": "objectbucketclaims",
      "section": "storage",
      "name": "Object Bucket Claims",
      "insertAfter": "objectbuckets",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucketClaim",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["MCG"]
    }
  },
  {
    "type": "console.navigation/resource-ns",
    "properties": {
      "id": "objectbucketclaims",
      "section": "storage",
      "name": "Object Bucket Claims",
      "insertAfter": "objectbuckets",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucketClaim",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["RGW"],
      "disallowed": ["MCG"]
    }
  },
  {
    "type": "console.navigation/href",
    "properties": {
      "id": "odfdashboard",
      "insertBefore": "persistentvolumes",
      "section": "storage",
      "name": "Data Foundation",
      "href": "/odf/cluster"
    },
    "flags": {
      "required": ["ODF_MODEL", "ODF_ADMIN"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": ["/odf/cluster", "/odf/systems"],
      "exact": false,
      "component": { "$codeRef": "dashboard.default" }
    },
    "flags": {
      "required": ["ODF_MODEL", "ODF_ADMIN"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": ["/odf", "/odf/overview"],
      "exact": true,
      "component": { "$codeRef": "dashboard.Reroute" }
    },
    "flags": {
      "required": ["ODF_MODEL"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/:kind",
      "exact": true,
      "component": { "$codeRef": "dashboard.RerouteResource" }
    },
    "flags": {
      "required": ["ODF_MODEL"]
    }
  },
  {
    "type": "console.resource/create",
    "properties": {
      "model": {
        "group": "odf.openshift.io",
        "version": "v1alpha1",
        "kind": "StorageSystem"
      },
      "component": { "$codeRef": "wizard.default" }
    }
  },
  {
    "type": "console.page/resource/list",
    "properties": {
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucketClaim",
        "version": "v1alpha1"
      },
      "component": { "$codeRef": "obc.OBCListPage" }
    }
  },
  {
    "type": "console.page/resource/details",
    "properties": {
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucketClaim",
        "version": "v1alpha1"
      },
      "component": { "$codeRef": "obc.OBCDetailsPage" }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "exact": false,
      "path": "/k8s/ns/:ns/objectbucket.io~v1alpha1~ObjectBucketClaim/~new/form",
      "component": {
        "$codeRef": "createOBC.CreateOBCPage"
      }
    }
  },
  {
    "type": "console.page/resource/details",
    "properties": {
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucket",
        "version": "v1alpha1"
      },
      "component": { "$codeRef": "ob.OBDetailsPage" }
    }
  },
  {
    "type": "console.page/resource/list",
    "properties": {
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucket",
        "version": "v1alpha1"
      },
      "component": { "$codeRef": "ob.ObjectBucketListPage" }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "exact": true,
      "path": "/odf/system/ocs.openshift.io~v1~StorageCluster/:systemName/ceph.rook.io~v1~CephBlockPool/create/~new",
      "component": {
        "$codeRef": "createBlockPools.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/system/ocs.openshift.io~v1~StorageCluster/:systemName/ceph.rook.io~v1~CephBlockPool/:poolName",
      "exact": false,
      "component": {
        "$codeRef": "blockPoolDetailsPage.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~BackingStore/create/~new",
      "exact": true,
      "component": {
        "$codeRef": "bsCreate.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~NamespaceStore/create/~new",
      "exact": true,
      "component": {
        "$codeRef": "nsCreate.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~BucketClass/create/~new",
      "exact": true,
      "component": {
        "$codeRef": "bcCreate.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~BackingStore/:resourceName",
      "exact": false,
      "component": {
        "$codeRef": "bsDetails.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~BucketClass/:resourceName",
      "exact": false,
      "component": {
        "$codeRef": "bcDetails.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~NamespaceStore/:resourceName",
      "exact": false,
      "component": {
        "$codeRef": "nsDetails.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/system/ocs.openshift.io~v1~StorageCluster/:systemName",
      "exact": false,
      "component": {
        "$codeRef": "ocs.default"
      }
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": [
        "/odf/edit/:cluster/ns/:namespace/:kind/:name/yaml",
        "/odf/edit/:cluster/cluster/:kind/:name/yaml"
      ],
      "exact": true,
      "component": {
        "$codeRef": "editPage.default"
      }
    }
  },
  {
    "type": "console.dashboards/overview/health/resource",
    "properties": {
      "title": "Storage",
      "resources": { "$codeRef": "healthResource.healthResource" },
      "healthHandler": { "$codeRef": "healthResource.healthHandler" },
      "popupComponent": { "$codeRef": "healthResource.StoragePopover" },
      "popupTitle": "Storage"
    }
  },
  {
    "type": "console.dashboards/overview/activity/resource",
    "properties": {
      "component": { "$codeRef": "activityResource.ClusterExpandActivity" },
      "isActivity": { "$codeRef": "activityResource.isClusterExpandActivity" },
      "k8sResource": {
        "$codeRef": "activityResource.k8sResource"
      }
    }
  },
  {
    "type": "console.storage-provider",
    "properties": {
      "name": "ObjectBucketClaim",
      "Component": {
        "$codeRef": "storageProvider"
      }
    }
  },
  {
    "type": "console.dashboards/overview/inventory/item",
    "properties": {
      "mapper": { "$codeRef": "obcStatus.getObcStatusGroups" },
      "model": { "$codeRef": "models.NooBaaObjectBucketClaimModel" }
    }
  },
  {
    "type": "console.storage-class/provisioner",
    "properties": {
      "CSI": {
        "title": "Ceph RBD",
        "provisioner": "rbd.csi.ceph.com",
        "allowVolumeExpansion": true,
        "parameters": {
          "clusterID": {
            "name": "Cluster ID",
            "hintText": "The namespace where Ceph is deployed",
            "value": "openshift-storage",
            "visible": false
          },
          "pool": {
            "name": "Storage Pool",
            "hintText": "Storage pool into which volume data shall be stored",
            "required": true,
            "visible": true,
            "Component": {
              "$codeRef": "storageProvisionerComponents.PoolResourceComponent"
            }
          },
          "imageFormat": {
            "name": "Image Format",
            "hintText": "RBD image format. Defaults to '2'",
            "value": "2",
            "visible": false
          },
          "imageFeatures": {
            "name": "Image Features",
            "hintText": "Ceph RBD image features",
            "value": "layering,deep-flatten,exclusive-lock,object-map,fast-diff",
            "visible": false
          },
          "csi.storage.k8s.io/provisioner-secret-name": {
            "name": "Provisioner Secret Name",
            "hintText": "The name of provisioner secret",
            "value": "rook-csi-rbd-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/provisioner-secret-namespace": {
            "name": "Provisioner Secret Namespace",
            "hintText": "The namespace where provisioner secret is created",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-name": {
            "name": "Node Stage Secret Name",
            "hintText": "The name of Node Stage secret",
            "value": "rook-csi-rbd-node",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-namespace": {
            "name": "Node Stage Secret Namespace",
            "hintText": "The namespace where provisioner secret is created",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/fstype": {
            "name": "Filesystem Type",
            "hintText": "Ceph RBD filesystem type. Default set to ext4",
            "value": "ext4",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-name": {
            "name": "Expand Secret Name",
            "hintText": "The namespace where provisioner secret is created",
            "value": "rook-csi-rbd-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-namespace": {
            "name": "Expand Secret Namespace",
            "hintText": "The namespace where provisioner secret is created",
            "value": "openshift-storage",
            "visible": false
          },
          "encrypted": {
            "name": "Enable Encryption",
            "hintText": "The namespace where provisioner secret is created",
            "Component": {
              "$codeRef": "storageProvisionerComponents.StorageClassEncryption"
            },
            "visible": true
          },
          "encryptionKMSID": {
            "name": "Encryption ID",
            "hintText": "A unique ID matching KMS ConfigMap",
            "Component": {
              "$codeRef": "storageProvisionerComponents.StorageClassEncryptionKMSID"
            },
            "visible": {
              "$codeRef": "storageProvisioners.isEncryptionKMSIdVisibleOrRequired"
            },
            "required": {
              "$codeRef": "storageProvisioners.isEncryptionKMSIdVisibleOrRequired"
            }
          },
          "thickProvision": {
            "name": "Enable Thick Provisioning",
            "hintText": "Volumes will allocate the requested capacity upon volume creation",
            "Component": { "$codeRef": "thickProvisioner.ThickProvision" },
            "visible": true
          }
        }
      }
    }
  },
  {
    "type": "console.storage-class/provisioner",
    "properties": {
      "CSI": {
        "title": "Ceph FS",
        "provisioner": "cephfs.csi.ceph.com",
        "allowVolumeExpansion": true,
        "parameters": {
          "clusterID": {
            "name": "Cluster ID",
            "hintText": "The namespace where Ceph is deployed",
            "value": "openshift-storage",
            "visible": false
          },
          "fsName": {
            "name": "Filesystem Name",
            "hintText": "CephFS filesystem name into which the volume shall be created",
            "required": true,
            "visible": true,
            "Component": {
              "$codeRef": "storageProvisionerComponents.CephFsNameComponent"
            }
          },
          "csi.storage.k8s.io/provisioner-secret-name": {
            "name": "Provisioner Secret Name",
            "hintText": "The name of provisioner secret",
            "value": "rook-csi-cephfs-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/provisioner-secret-namespace": {
            "name": "Provisioner Secret Namespace",
            "hintText": "The namespace where provisioner secret is created",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-name": {
            "name": "Node Stage Secret Name",
            "hintText": "The name of Node Stage secret",
            "value": "rook-csi-cephfs-node",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-namespace": {
            "name": "Node Stage Secret Namespace",
            "hintText": "The namespace where provisioner secret is created",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-name": {
            "name": "Expand Secret Name",
            "hintText": "The namespace where provisioner secret is created",
            "value": "rook-csi-cephfs-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-namespace": {
            "name": "Expand Secret Namespace",
            "hintText": "The namespace where provisioner secret is created",
            "value": "openshift-storage",
            "visible": false
          }
        }
      }
    }
  },
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephOSDDiskUnavailable",
      "text": "Troubleshoot",
      "action": {
        "$codeRef": "alert.getDiskAlertActionPath"
      }
    }
  },
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephOSDDiskNotResponding",
      "text": "Troubleshoot",
      "action": {
        "$codeRef": "alert.getDiskAlertActionPath"
      }
    }
  },
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephClusterNearFull",
      "text": "Add Capacity",
      "action": {
        "$codeRef": "alert.launchClusterExpansionModal"
      }
    }
  },
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephClusterCriticallyFull",
      "text": "Add Capacity",
      "action": {
        "$codeRef": "alert.launchClusterExpansionModal"
      }
    }
  },
  {
    "type": "console.action/provider",
    "properties": {
      "contextId": "csv-actions",
      "provider": { "$codeRef": "actions.useCsvActions" }
    }
  },
  {
    "type": "odf.dashboard/tab",
    "properties": {
      "id": "backing-store",
      "name": "Backing Store",
      "after": "systems",
      "href": "resource/noobaa.io~v1alpha1~BackingStore",
      "component": {
        "$codeRef": "resourcePages.BackingStoreListPage"
      }
    },
    "flags": {
      "required": ["MCG_FLAG"]
    }
  },
  {
    "type": "odf.dashboard/tab",
    "properties": {
      "id": "bucket-class",
      "name": "Bucket Class",
      "after": "backing-store",
      "href": "resource/noobaa.io~v1alpha1~BucketClass",
      "component": {
        "$codeRef": "resourcePages.BucketClassListPage"
      }
    },
    "flags": {
      "required": ["MCG_FLAG"]
    }
  },
  {
    "type": "odf.dashboard/tab",
    "properties": {
      "id": "namespace-store",
      "name": "Namespace Store",
      "after": "bucket-class",
      "href": "resource/noobaa.io~v1alpha1~NamespaceStore",
      "component": {
        "$codeRef": "resourcePages.NamespaceStoreListPage"
      }
    },
    "flags": {
      "required": ["MCG_FLAG"]
    }
  }
]
